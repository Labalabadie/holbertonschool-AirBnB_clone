#!/usr/bin/python3
""" Class definition """
import datetime
import uuid


class FileStorage:
    """ Serializes instances to a JSON file and deserializes
    JSON file to instances """
    __file_path = ""
    __objects = {}

    def all(self):
        """ returns the dictionary __objects """
        return FileStorage.__objects
    def new(self, obj):
        """ sets in __objects the obj with key <obj class name>.id """
        FileStorage.__objects = f"{obj.__class__.__name__}.id"
    def save(self):
        """ serializes __objects to the JSON file (path: __file_path) """
        
    def __init__(self):
        """ intialize instance """
        self.id = str(uuid.uuid4())
        self.created_at = datetime.datetime.now()
        self.updated_at = datetime.datetime.now()

    def __str__(self):
        """ overrides str method """
        return(f"[{__class__.__name__}] ({self.id}) {self.__dict__}")

    def save(self):
        """ updates the public instance attribute updated_at with the
        current datetime """
        self.updated_at = datetime.datetime.now()

    def to_dict(self):
        """ returns a dictionary containing all keys/values of __dict__
        of the instance """
        self.__dict__["__class__"] = __class__.__name__
        self.__dict__["created_at"] = (self.__dict__["created_at"]).isoformat()
        self.__dict__["updated_at"] = (self.__dict__["updated_at"]).isoformat()
        return self.__dict__
